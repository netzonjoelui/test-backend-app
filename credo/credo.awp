<?php
	require_once("../validate_user.php");
	require_once("../lib/AntConfig.php");
	require_once("../settings/settings_functions.php");
	require_once("../lib/content_table.awp");
	require_once("../lib/CDatabase.awp");
	require_once("../lib/CToolTabs.awp");
	require_once("../lib/WindowFrame.awp");
	require_once("../users/user_functions.php");
	require_once("../lib/CToolTable.awp");
	require_once("../lib/Button.awp");
	require_once("../lib/CDropdownMenu.awp");
	require_once("../email/email_functions.awp");
	
	$dbh = new CDatabase();
									  
	$USERNAME = $_SESSION["USER_NAME"];
	$USERID = $_SESSION["USER_ID"];
	
	$FID = $_GET['fid'];
	$AUTOMATE = $_GET['automate'];
	$CID = $_GET['cid'];
	$PID = $_GET['pid'];
	
	// Handle document save
	if ($_POST['save'])
	{
		$result = $dbh->Query("select id from user_files_documents where file_id='$FID'");
		if ($dbh->GetNumberRows($result))
		{
			$row = $dbh->GetNextRow($result, 0);
			$docid = $row['id'];
		}
		$dbh->FreeResults($result);
		
		if ($docid)
		{
			$query = "update user_files_documents set data='".$_POST['editorbody']."' 
						 where id='$docid'";
			$dbh->Query($query);
		}
		else
		{
			$query = "insert into user_files_documents (data, file_id)
						 values('".$_POST['editorbody']."', '$FID')";
			$dbh->Query($query);
		}
		
		// Update file link size
		$dbh->Query("update user_files set file_size='".strlen($_POST['editorbody'])."',
						 time_updated='now' where id='$FID'");
	}
?>
<!--<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">-->
<html>
<head>
	<title>Aereus Credo</title>
	<link rel="STYLESHEET" type="text/css" href="/css/<?php echo UserGetTheme(&$dbh, $USERID, 'css'); ?>">
	<script type="text/javascript">	
	
	function ResizeBoxes()
	{
		var div_toolbars = document.getElementById('div_toolbars');
		var div_main = document.getElementById('div_main');
		var div_container = document.getElementById('div_container');
		//alert(cont.offsetHeight);
		if (document.all)
			div_main.style.height = (div_container.offsetHeight - div_toolbars.offsetHeight) + 'px';
		else
			div_main.style.height = ((div_container.offsetHeight-10) - div_toolbars.offsetHeight) + 'px';
	}
	function PrintDocument()
	{
		//var bdy_ifrm = document.getElementById('editorbody');
		//document.getElementById('editorbody').print();
		//editorbody.print();
		//bdy_ifrm.print();
		//window.frames['editorbody'].focus();
		//window.frames['editorbody'].print();
		var oRTE = document.getElementById("editorbody");
		document.printform.printbody.value = oRTE.contentWindow.document.body.innerHTML;
		document.printform.submit();
	}
	function submitForm() 
	{
		//make sure hidden and iframe values are in sync before submitting form
		//to sync only 1 rte, use updateRTE(rte)
		//to sync all rtes, use updateRTEs
		updateRTE('editorbody');
		document.edit_form.submit();
	}
	// Automate a template
	function SetContact(cid)
	{
		document.location="<?php print("/document/editor.awp?automate=1&pid=$PID&fid=$FID&cid="); ?>"+cid;
	}
	var isRichText = false;
	var rng;
	var currentRTE;
	var allRTEs = "";
	var ACTIVERTE = "";
	var PAGES = new Array();
	
	var isIE;
	var isGecko;
	var isSafari;
	var isKonqueror;
	
	var imagesPath;
	var includesPath;
	var cssFile;
	
	
	function initRTE(imgPath, incPath, css) 
	{
		//set browser vars
		var ua = navigator.userAgent.toLowerCase();
		isIE = ((ua.indexOf("msie") != -1) && (ua.indexOf("opera") == -1) && (ua.indexOf("webtv") == -1)); 
		isGecko = (ua.indexOf("gecko") != -1);
		isSafari = (ua.indexOf("safari") != -1);
		isKonqueror = (ua.indexOf("konqueror") != -1);
		
		//check to see if designMode mode is available
		if (document.getElementById && document.designMode && !isSafari && !isKonqueror)
			isRichText = true;
		
		if (isIE)
		{
			document.onmouseover = raiseButton;
			document.onmouseout  = normalButton;
			document.onmousedown = lowerButton;
			document.onmouseup   = raiseButton;
		}
		
		//set paths vars
		imagesPath = imgPath;
		//includesPath = incPath;
		includesPath = "/lib/rte/";
		cssFile = css;
	}
	
	function writeRichTextDiv(div_name, rte, html, width, height) 
	{
		var mainDiv = document.getElementById(div_name);
		var nDiv = document.createElement("div");
		nDiv.className = 'pagediv';
		mainDiv.appendChild(nDiv);
		
		if (allRTEs.length > 0) allRTEs += ";";
		allRTEs += rte;
		
		var ret_string = '<div>';
		ret_string += '<iframe scrolling="no" onfocus="SetActiveRte(\''+rte+'\');" id="' + rte + '" name="' + rte + '" width="' + width + '" height="' + height + '" src="' + includesPath + 'blank.htm" style="border:1px solid #000000;" frameborder="0"></iframe>';
		ret_string += '<iframe width="154" height="104" id="cp' + rte + '" src="' + includesPath + 'palette.htm" marginwidth="0" marginheight="0" scrolling="no" style="display:none; position: absolute; top:0px; left:0px;"></iframe>';
		ret_string += '<input type="hidden" id="hdn' + rte + '" name="' + rte + '" value="">';
		ret_string += '</div>';
		nDiv.innerHTML += ret_string;
		document.getElementById('hdn' + rte).value = html;
		enableDesignMode(rte, html, false);
	}
	
	function writeRichText(rte, rtename, html, width, height, buttons, readOnly) 
	{
		if (isRichText) 
		{
			if (allRTEs.length > 0) allRTEs += ";";
			allRTEs += rte;
			
			if (readOnly) buttons = false;
			
			//adjust minimum table widths
			if (isIE) 
			{
				if (buttons && (width < 540)) width = 540;
				var tablewidth = width;
			} 
			else 
			{
				if (buttons && (width < 540)) width = 540;
				var tablewidth = width + 4;
			}
	
			document.writeln('<div>');
			if (buttons == true) 
			{
				/*
				document.writeln('<table class="rteBack" cellpadding="0" cellspacing="0" id="Buttons2_' + rte + '" width="100%">');
				document.writeln('	<tr><td width="100%">');
				document.writeln('<div style="float:left;"><img id="bold" class="rteImage" src="' + imagesPath + 'bold.gif" width="25" height="24" alt="Bold" title="Bold" onClick="rteCommand(\'' + rte + '\', \'bold\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'italic.gif" width="25" height="24" alt="Italic" title="Italic" onClick="rteCommand(\'' + rte + '\', \'italic\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'underline.gif" width="25" height="24" alt="Underline" title="Underline" onClick="rteCommand(\'' + rte + '\', \'underline\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteVertSep" src="' + imagesPath + 'blackdot.gif" width="1" height="20" border="0" alt=""></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'left_just.gif" width="25" height="24" alt="Align Left" title="Align Left" onClick="rteCommand(\'' + rte + '\', \'justifyleft\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'centre.gif" width="25" height="24" alt="Center" title="Center" onClick="rteCommand(\'' + rte + '\', \'justifycenter\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'right_just.gif" width="25" height="24" alt="Align Right" title="Align Right" onClick="rteCommand(\'' + rte + '\', \'justifyright\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'justifyfull.gif" width="25" height="24" alt="Justify Full" title="Justify Full" onclick="rteCommand(\'' + rte + '\', \'justifyfull\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteVertSep" src="' + imagesPath + 'blackdot.gif" width="1" height="20" border="0" alt=""></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'hr.gif" width="25" height="24" alt="Horizontal Rule" title="Horizontal Rule" onClick="rteCommand(\'' + rte + '\', \'inserthorizontalrule\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteVertSep" src="' + imagesPath + 'blackdot.gif" width="1" height="20" border="0" alt=""></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'numbered_list.gif" width="25" height="24" alt="Ordered List" title="Ordered List" onClick="rteCommand(\'' + rte + '\', \'insertorderedlist\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'list.gif" width="25" height="24" alt="Unordered List" title="Unordered List" onClick="rteCommand(\'' + rte + '\', \'insertunorderedlist\', \'\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteVertSep" src="' + imagesPath + 'blackdot.gif" width="1" height="20" border="0" alt=""></div>');
				document.writeln('<div style="float:left;"><div id="forecolor_' + rte + '"><img class="rteImage" src="' + imagesPath + 'textcolor.gif" width="25" height="24" alt="Text Color" title="Text Color" onClick="dlgColorPalette(\'' + rte + '\', \'forecolor\', \'\')"></div></div>');
				document.writeln('<div style="float:left;"><div id="hilitecolor_' + rte + '"><img class="rteImage" src="' + imagesPath + 'bgcolor.gif" width="25" height="24" alt="Background Color" title="Background Color" onClick="dlgColorPalette(\'' + rte + '\', \'hilitecolor\', \'\')"></div></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'hyperlink.gif" width="25" height="24" alt="Insert Link" title="Insert Link" onClick="insertLink(\'' + rte + '\')"></div>');
				document.writeln('<div style="float:left;"><img class="rteImage" src="' + imagesPath + 'image.gif" width="25" height="24" alt="Add Image" title="Add Image" onClick="addImage(\'' + rte + '\')"></div>');
				document.writeln('<div style="float:left;"><div id="table_' + rte + '"><img class="rteImage" src="' + imagesPath + 'insert_table.gif" width="25" height="24" alt="Insert Table" title="Insert Table" onClick="dlgInsertTable(\'' + rte + '\', \'table\', \'\')"></div></div>');
				document.writeln('<div style="float:left;">');
				document.writeln('			<select tabindex="1000" id="fontname_' + rte + '" onchange="selectFont(\'' + rte + '\', this.id)">');
				document.writeln('				<option value="Font" selected>[Font]</option>');
				document.writeln('				<option value="Arial, Helvetica, sans-serif">Arial</option>');
				document.writeln('				<option value="Courier New, Courier, mono">Courier New</option>');
				document.writeln('				<option value="Times New Roman, Times, serif">Times New Roman</option>');
				document.writeln('				<option value="Verdana, Arial, Helvetica, sans-serif">Verdana</option>');
				document.writeln('			</select>');
				document.writeln('</div>');
				document.writeln('<div style="float:left;">');
				document.writeln('			<select tabindex="1001" unselectable="on" id="fontsize_' + rte + '" onchange="selectFont(\'' + rte + '\', this.id);">');
				document.writeln('				<option value="Size">[Size]</option>');
				document.writeln('				<option value="1">1</option>');
				document.writeln('				<option value="2">2</option>');
				document.writeln('				<option value="3">3</option>');
				document.writeln('				<option value="4">4</option>');
				document.writeln('				<option value="5">5</option>');
				document.writeln('				<option value="6">6</option>');
				document.writeln('				<option value="7">7</option>');
				document.writeln('			</select>');
				document.writeln('</div>');
				document.writeln('</td></tr>');
				document.writeln('</table>');
				*/
			}
			
			document.writeln('<iframe onfocus="SetActiveRte(\''+rte+'\');" id="' + rte + '" name="' + rte + '" width="' + width + '" height="' + height + '" src="' + includesPath + 'blank.htm" style="border:1px solid #000000;" frameborder="0" scrolling="no"></iframe>');
			//if (!readOnly) document.writeln('<br /><input type="checkbox" id="chkSrc' + rte + '" onclick="toggleHTMLSrc(\'' + rte + '\');" />&nbsp;View Source');
			document.writeln('<iframe width="154" height="104" id="cp' + rte + '" src="' + includesPath + 'palette.htm" marginwidth="0" marginheight="0" scrolling="no" style="display:none; position: absolute; top:0px; left:0px;"></iframe>');
			document.writeln('<input type="hidden" id="hdn' + rte + '" name="' + rtename + '" value="">');
			document.writeln('</div>');
			
			document.getElementById('hdn' + rte).value = html;
			enableDesignMode(rte, html, readOnly);
		} 
		else 
		{
			if (!readOnly) 
			{
				document.writeln('<textarea name="' + rte + '" id="' + rte + '" style="width: ' + width + '; height: ' + height + 'px;">' + html + '</textarea>');
			}
			else 
			{
				document.writeln('<textarea name="' + rte + '" id="' + rte + '" style="width: ' + width + 'px; height: ' + height + 'px;" readonly>' + html + '</textarea>');
			}
		}
	}
	
	function enableDesignMode(rte, html, readOnly) 
	{
		var frameHtml = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \n";
		frameHtml += "\"http://www.w3.org/TR/html4/loose.dtd\">\n";
		frameHtml += "<html id=\"" + rte + "\">\n";
		frameHtml += "<head>\n";
		frameHtml += "<style>\n";
		frameHtml += "body {\n";
		frameHtml += " background: #FFFFFF;\n";
		frameHtml += " margin: 3px;\n";
		frameHtml += " padding: 3px;\n";
		frameHtml += "}\n";
		frameHtml += " P {margin-top:0;margin-bottom:0}\n";
		frameHtml += "}\n";
		frameHtml += "</style>\n"; 
		frameHtml += "</head>\n";
		frameHtml += "<body id='div_body'>\n";
		frameHtml += unescape(html) + "\n";
		frameHtml += "</body>\n";
		frameHtml += "</html>";
		
		if (document.all) 
		{
			var oRTE = frames[rte].document;
			oRTE.open();
			oRTE.write(frameHtml);
			oRTE.close();

			if (!readOnly) oRTE.designMode = "On";
			oRTE.onkeypress = kb_handler;
			//oRTE.addEvent("onfocus", function() { ACTIVERTE = rte; alert('me'); }, true);
			//oRTE.onfocus = function() { ACTIVERTE = rte; alert('me'); };
		} 
		else 
		{
			try 
			{
				if (!readOnly) document.getElementById(rte).contentDocument.designMode = "on";
				try 
				{
					var oRTE = document.getElementById(rte).contentWindow.document;
					oRTE.open();
					oRTE.write(frameHtml);
					oRTE.close();
					if (isGecko && !readOnly) 
					{
						//attach a keyboard handler for gecko browsers to make keyboard shortcuts work
						oRTE.addEventListener("keypress", kb_handler, true);
						oRTE.addEventListener("focus", function() { SetActiveRte(rte); }, true);
					}
				} 
				catch (e) 
				{
					alert("Error preloading content.");
				}
			} 
			catch (e) 
			{
				// gecko may take some time to enable design mode.
				// Keep looping until able to set.
				if (isGecko) 
					setTimeout("enableDesignMode('" + rte + "', \"" + html + "\", " + readOnly + ");", 10);
				else 
					return false;
			}
		}
	}
	
	function SetActiveRte(name)
	{
		ACTIVERTE = name;
	}
	
	function updateRTEs() 
	{
		var vRTEs = allRTEs.split(";");
		for (var i = 0; i < vRTEs.length; i++) 
		{
			updateRTE(vRTEs[i]);
		}
	}
	
	function updateRTE(rte) 
	{
		if (!isRichText) return;
		
		//set message value
		var oHdnMessage = document.getElementById('hdn' + rte);
		var oRTE = document.getElementById(rte);
		var readOnly = false;
		// Debug code
		//var htmview = document.getElementById('displayhtml');
		
		//check for readOnly mode
		if (document.all) 
		{
			if (frames[rte].document.designMode != "On") readOnly = true;
		} 
		else 
		{
			if (document.getElementById(rte).contentDocument.designMode != "on") readOnly = true;
		}
		'100%'
		if (isRichText && !readOnly) 
		{
			if (oHdnMessage.value == null) oHdnMessage.value = "";
			if (document.all) 
			{
				var bdy = frames[rte].document.body.innerHTML;
				var re = new RegExp ('<p>', 'gi') ;
				var bdy = bdy.replace(re, '<br>') ;
				var re = new RegExp ('</p>', 'gi') ;
				var bdy = bdy.replace(re, '') ;
				oHdnMessage.value = bdy;
				//htmview.value = bdy;
			} 
			else 
			{
				oHdnMessage.value = oRTE.contentWindow.document.body.innerHTML;
				htmview.value = oRTE.contentWindow.document.body.innerHTML;
			}
			
			var htmview = document.getElementById('displayhtml');
			
			//if there is no content (other than formatting) set value to nothing
			if (stripHTML(oHdnMessage.value.replace("&nbsp;", " ")) == "" 
				&& oHdnMessage.value.toLowerCase().search("<hr") == -1
				&& oHdnMessage.value.toLowerCase().search("<img") == -1) oHdnMessage.value = "";
			//fix for gecko
			if (escape(oHdnMessage.value) == "%3Cbr%3E%0D%0A%0D%0A%0D%0A") oHdnMessage.value = "";
		}
	}
	
	function rteCommand(rte, command, option) 
	{
		//function to perform command
		var oRTE;
		if (document.all) 
		{
			oRTE = frames[rte];
		} 
		else 
		{
			oRTE = document.getElementById(rte).contentWindow;
		}
		
		try 
		{
			oRTE.focus();
			oRTE.document.execCommand(command, false, option);
			oRTE.focus();
		} 
		catch (e) 
		{
	//		alert(e);
	//		setTimeout("rteCommand('" + rte + "', '" + command + "', '" + option + "');", 10);
		}
	}
	
	function toggleHTMLSrc(rte) 
	{
	}
	
	function dlgColorPalette(rte, command) 
	{
		//function to display or hide color palettes
		setRange(rte);
		
		//get dialog position
		var oDialog = document.getElementById('cp' + rte);
		var buttonElement = document.getElementById(command + '_' + rte);
		var iLeftPos = getOffsetLeft(buttonElement);
		var iTopPos = getOffsetTop(buttonElement) + (buttonElement.offsetHeight + 4);
		oDialog.style.left = (iLeftPos) + "px";
		oDialog.style.top = (iTopPos) + "px";
		
		if ((command == parent.command) && (rte == currentRTE)) 
		{
			//if current command dialog is currently open, close it
			if (oDialog.style.display == "none") 
			{
				showHideElement(oDialog, 'show');
			} 
			else 
			{
				showHideElement(oDialog, 'hide');
			}
		} 
		else 
		{
			//if opening a new dialog, close all others
			var vRTEs = allRTEs.split(";");
			for (var i = 0; i < vRTEs.length; i++) 
			{
				showHideElement('cp' + vRTEs[i], 'hide');
			}
			showHideElement(oDialog, 'show');
		}
		
		//save current values
		parent.command = command;
		currentRTE = rte;
	}
	
	function dlgInsertTable(rte, command) 
	{
		//function to open/close insert table dialog
		//save current values
		setRange(rte);
		parent.command = command;
		currentRTE = rte;
		var windowOptions = 'history=no,toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=no,resizable=no,width=360,height=200';
		window.open(includesPath + 'insert_table.htm', 'InsertTable', windowOptions);
	}
	
	function insertLink(rte) 
	{
		//function to insert link
		var szURL = prompt("Enter a URL:", "");
		try 
		{
			//ignore error for blank urls
			rteCommand(rte, "Unlink", null);
			rteCommand(rte, "CreateLink", szURL);
		} 
		catch (e) 
		{
			//do nothing
		}
	}
	
	function setColor(color) 
	{
		//function to set color
		var rte = currentRTE;
		var parentCommand = parent.command;
		
		if (document.all) 
		{
			//retrieve selected range
			var sel = frames[rte].document.selection; 
			if (parentCommand == "hilitecolor") parentCommand = "backcolor";
			if (sel != null) 
			{
				var newRng = sel.createRange();
				newRng = rng;
				newRng.select();
			}
		}
		
		rteCommand(rte, parentCommand, color);
		showHideElement('cp' + rte, "hide");
	}
	
	function addImage(rte) 
	{
		//function to add image
		imagePath = prompt('Enter Image URL:', 'http://');				
		if ((imagePath != null) && (imagePath != "")) 
		{
			rteCommand(rte, 'InsertImage', imagePath);
		}
	}
	
	// Ernst de Moor: Fix the amount of digging parents up, in case the RTE editor itself is displayed in a div.
	// KJR 11/12/2004 Changed to position palette based on parent div, so palette will always appear in proper location regardless of nested divs
	function getOffsetTop(elm) 
	{
		var mOffsetTop = elm.offsetTop;
		var mOffsetParent = elm.offsetParent;
		var parents_up = 2; //the positioning div is 2 elements up the tree
		
		while(parents_up > 0) {
			mOffsetTop += mOffsetParent.offsetTop;
			mOffsetParent = mOffsetParent.offsetParent;
			parents_up--;
		}
		
		return mOffsetTop;
	}
	
	// Ernst de Moor: Fix the amount of digging parents up, in case the RTE editor itself is displayed in a div.
	// KJR 11/12/2004 Changed to position palette based on parent div, so palette will always appear in proper location regardless of nested divs
	function getOffsetLeft(elm) 
	{
		var mOffsetLeft = elm.offsetLeft;
		var mOffsetParent = elm.offsetParent;
		var parents_up = 2;
		
		while(parents_up > 0) 
		{
			mOffsetLeft += mOffsetParent.offsetLeft;
			mOffsetParent = mOffsetParent.offsetParent;
			parents_up--;
		}
		
		return mOffsetLeft;
	}
	
	function selectFont(rte, selectname) 
	{
		//function to handle font changes
		var idx = document.getElementById(selectname).selectedIndex;
		// First one is always a label
		if (idx != 0) 
		{
			var selected = document.getElementById(selectname).options[idx].value;
			var cmd = selectname.replace('_' + rte, '');
			rteCommand(rte, cmd, selected);
			document.getElementById(selectname).selectedIndex = 0;
		}
	}
	
	function kb_handler(e) 
	{
		var rte = ACTIVERTE;
		if (e)
		{
			var evt = e;
		}
		else
		{
			if (document.getElementById(rte).contentWindow.event)
				var evt = document.getElementById(rte).contentWindow.event;
			else
				evt = NULL;
		}

		if(evt)
		{
			var key=(evt.charCode) ? evt.charCode : ((evt.keyCode) ? evt.keyCode :((evt.which) ? evt.which : 0));
			
			CheckPageSize(rte);
		}
		
		//var rte = evt.target.id;
		
		//contributed by Anti Veeranna (thanks Anti!)
		if (evt.ctrlKey) 
		{
			var key = String.fromCharCode(evt.charCode).toLowerCase();
			var cmd = '';
			switch (key) 
			{
				case 'b': cmd = "bold"; break;
				case 'i': cmd = "italic"; break;
				case 'u': cmd = "underline"; break;
			};
	
			if (cmd) 
			{
				rteCommand(rte, cmd, null);
				
				// stop the event bubble
				evt.preventDefault();
				evt.stopPropagation();
			}
		}
	}
	
	function insertHTML(html, pass_rte) 
	{
		//function to add HTML -- thanks dannyuk1982
		if (pass_rte)
			var rte = pass_rte;
		else
			var rte = currentRTE;
	
		var oRTE;
		if (document.all) 
		{
			oRTE = frames[rte];
		} 
		else 
		{
			oRTE = document.getElementById(rte).contentWindow;
		}
		
		oRTE.focus();
		if (document.all) 
		{
			oRTE.document.selection.createRange().pasteHTML(html);
		} 
		else 
		{
			oRTE.document.execCommand('insertHTML', false, html);
		}
	}
	
	function showHideElement(element, showHide) 
	{
		//function to show or hide elements
		//element variable can be string or object
		if (document.getElementById(element)) 
		{
			element = document.getElementById(element);
		}
		
		if (showHide == "show") 
		{
			element.style.display = "block";
		} 
		else if (showHide == "hide") 
		{
			element.style.display = "none";
		}
	}
	
	function setRange(rte) 
	{
		//function to store range of current selection
		var oRTE;
		if (document.all) 
		{
			oRTE = frames[rte];
			var selection = oRTE.document.selection; 
			if (selection != null) rng = selection.createRange();
		} 
		else 
		{
			oRTE = document.getElementById(rte).contentWindow;
			var selection = oRTE.getSelection();
			rng = selection.getRangeAt(selection.rangeCount - 1).cloneRange();
		}
	}
	
	function stripHTML(oldString) 
	{
		//function to strip all html
		var newString = oldString.replace(/(<([^>]+)>)/ig,"");
		
		//replace carriage returns and line feeds
	   newString = newString.replace(/\r\n/g," ");
	   newString = newString.replace(/\n/g," ");
	   newString = newString.replace(/\r/g," ");
		
		//trim string
		newString = trim(newString);
		
		return newString;
	}
	
	function trim(inputString) 
	{
	   // Removes leading and trailing spaces from the passed string. Also removes
	   // consecutive spaces and replaces it with one space. If something besides
	   // a string is passed in (null, custom object, etc.) then return the input.
	   if (typeof inputString != "string") return inputString;
	   var retValue = inputString;
	   var ch = retValue.substring(0, 1);
		
	   while (ch == " ") 
	   { // Check for spaces at the beginning of the string
		  retValue = retValue.substring(1, retValue.length);
		  ch = retValue.substring(0, 1);
	   }
	   ch = retValue.substring(retValue.length - 1, retValue.length);
		
	   while (ch == " ") 
	   { // Check for spaces at the end of the string
		  retValue = retValue.substring(0, retValue.length - 1);
		  ch = retValue.substring(retValue.length - 1, retValue.length);
	   }
		
		// Note that there are two spaces in the string - look for multiple spaces within the string
	   while (retValue.indexOf("  ") != -1) 
	   { style="border:1ps solid;"
			// Again, there are two spaces in each of the strings
		  retValue = retValue.substring(0, retValue.indexOf("  ")) + retValue.substring(retValue.indexOf("  ") + 1, retValue.length);
	   }
	   return retValue; // Return the trimmed string back to the user
	}
	
	//*****************
	//IE-Only Functions
	//*****************
	function checkspell() 
	{
		//function to perform spell check
		try 
		{
			var tmpis = new ActiveXObject("ieSpell.ieSpellExtension");
			tmpis.CheckAllLinkedDocuments(document);
		}
		catch(exception) 
		{
			if(exception.number==-2146827859) 
			{
				if (confirm("ieSpell not detected.  Click Ok to go to download page."))
					window.open("http://www.iespell.com/download.php","DownLoad");
			} 
			else 
			{
				alert("Error Loading ieSpell: Exception " + exception.number);
			}
		}
	}
	
	function raiseButton(e) 
	{
		//IE-Only Function
		var el = window.event.srcElement;
		
		className = el.className;
		if (className == 'rteImage' || className == 'rteImageLowered') 
		{
			el.className = 'rteImageRaised';
		}
	}
	
	function normalButton(e) 
	{
		//IE-Only Function
		var el = window.event.srcElement;
		
		className = el.className;
		if (className == 'rteImageRaised' || className == 'rteImageLowered') 
		{
			el.className = 'rteImage';
		}
	}
	
	function lowerButton(e) 
	{
		//IE-Only Function
		var el = window.event.srcElement;
		
		className = el.className;
		if (className == 'rteImage' || className == 'rteImageRaised') 
		{
			el.className = 'rteImageLowered';
		}
	}
	
	initRTE("/lib/rte/images/", "", "");
	
	function CheckPageSize(rte)
	{
		if (frames[rte].document.body.scrollHeight > 895)
		{
			// Check if next page already exists
			var cur = GetRteIndex(rte);
			var ename = 'editor_body' + (cur+1);
			if (!PAGES[cur+1])
			{
				PAGES[cur+1] = ename;
				writeRichTextDiv('div_main', ename, '', '775px', '900px');
			}
			
			SetRteFocus(ename);
		}
	}
	
	function SetRteFocus(rte)
	{
		if (document.all) 
		{
			if (!frames[rte].document.body)
			{
				//alert(frames[rte].focus);
				setTimeout("SetRteFocus('" + rte + "');", 10);
			}
			else
			{
				frames[rte].focus();
			}
		} 
		else 
		{
			document.getElementById(rte).contentWindow.focus();
		}
	}
	
	function GetRteIndex(rte)
	{
		for (i = 0; i < PAGES.length; i++)
		{
			if (PAGES[i] == rte)
				return i;
		}
	}
	
	</script>
	<style type='text/css'>
	body
	{
		height: 100%;
		margin:0px;
		overflow:hidden;
	}
	.pagediv
	{
		padding-top:5px;
	}
	#div_main
	{
		overflow: auto;
	}
	</style>
</head>
<body onLoad="ResizeBoxes();" onResize="ResizeBoxes()">
<?php
	if (is_numeric($FID))
	{
		$result = $dbh->Query("select data from user_files_documents where file_id='$FID'");
		if ($dbh->GetNumberRows($result))
		{
			$row = $dbh->GetNextRow($result, 0);
			$body = $row['data'];
		}
		$dbh->FreeResults($result);
		
		if ($AUTOMATE)
		{
			if ($CID)
			{
				$result = $dbh->Query("select * from contacts_personal where id='$CID'");
				if ($dbh->GetNumberRows($result))
				{
					$row = $dbh->GetNextRow($result, 0);
					foreach ($row as $key=>$val)
					{
						$body = str_replace("<%contacts_personal.".$key."%>", $val, $body);
						$body = str_replace("&lt;%contacts_personal.".$key."%&gt;", $val, $body);
					}
				}
			}
		}
	}
	// Create container div
	echo "<div id='div_container' style='height:100%;'>";
	
	echo "<form onSubmit=\"return submitForm();\" name='edit_form' method='post' action='editor.awp?fid=$FID&pid=$PID&cid=$CID'>";
	echo "<input type='hidden' name='save' value='1'>";
	
	echo "<div id='div_toolbars'>";
	WindowFrameToolbarStart('100%');
	
	$select_contact = "window.open('/contacts/popup_select_contact.awp?retfunction=SetContact', 'viewer', 'top=200,left=100,width=600,height=300,";
	$select_contact .= "toolbar=no,menubar=no,scrollbars=yes,location=no,directories=no,status=no,resizable=no');";
	
	echo ButtonCreate("Print", "PrintDocument()");
	//echo ButtonCreate("Test", "updateRTE('editorbody');alert(frames['editorbody'].document.getElementById('div_body').offsetHeight)");
	echo ButtonCreate("Test", "updateRTE('editorbody');alert(frames['editorbody'].document.body.scrollHeight)");
	if (!$CID)
		echo ButtonCreate("Apply Contact", $select_contact, 'b2');
		
	if (!$AUTOMATE)
	{
		echo ButtonCreate("Save", "submitForm()");
		$mMenu = new CDropMenu("md_automate", &$JSPRINTED, 'down');
		$mMenu->AddMenuItem("First Name", "javascript:insertHTML('<%contacts_personal.first_name%>', 'editorbody');");
		$mMenu->AddMenuItem("Last Name", "javascript:insertHTML('<%contacts_personal.last_name%>', 'editorbody');");
		$mMenu->AddMenuItem("Company", "javascript:insertHTML('<%contacts_personal.company%>', 'editorbody');");
		$mMenu->AddMenuItem("Nick Name", "javascript:insertHTML('<%contacts_personal.nick_name%>', 'editorbody');");
		$mMenu->AddMenuItem("Home Email", "javascript:insertHTML('<%contacts_personal.email%>', 'editorbody');");
		$mMenu->AddMenuItem("Work Email", "javascript:insertHTML('<%contacts_personal.email2%>', 'editorbody');");
		$mMenu->AddMenuItem("Home Street", "javascript:insertHTML('<%contacts_personal.street%>', 'editorbody');");
		$mMenu->AddMenuItem("Home City", "javascript:insertHTML('<%contacts_personal.city%>', 'editorbody');");
		$mMenu->AddMenuItem("Home State", "javascript:insertHTML('<%contacts_personal.state%>', 'editorbody');");
		$mMenu->AddMenuItem("Home Zip", "javascript:insertHTML('<%contacts_personal.zip%>', 'editorbody');");
		$mMenu->AddMenuItem("Business Street", "javascript:insertHTML('<%contacts_personal.business_street%>', 'editorbody');");
		$mMenu->AddMenuItem("Business City", "javascript:insertHTML('<%contacts_personal.business_city%>', 'editorbody');");
		$mMenu->AddMenuItem("Business State", "javascript:insertHTML('<%contacts_personal.business_state%>', 'editorbody');");
		$mMenu->AddMenuItem("Business Zip", "javascript:insertHTML('<%contacts_personal.business_zip%>', 'editorbody');");
		$mMenu->PrintButtonMenu("Insert AutoField");
		unset($mMenu);
	}
	
	WindowFrameToolbarEnd();
	
	WindowFrameToolbarStart('100%');
	echo "<div style=\"float:left;\">
			<img id=\"bold\" class=\"rteImage\" 
				src=\"/lib/rte/images/bold.gif\" width=\"25px\" height=\"24px\" alt=\"Bold\" title=\"Bold\" 
				onClick=\"rteCommand('editorbody', 'bold', '')\">
			</div>";
	WindowFrameToolbarEnd();
	echo "</div>";
	
	echo "<div style='background-color:#7F7F7F;padding:5px;height:500px;' align='center' id='div_main'>
				<div class='pagediv'>
					<script language=\"JavaScript\" type=\"text/javascript\">
					<!--
					writeRichText('editorbody0', 'editorbody0', '".rawurlencode($body)."',  '775px', '900px', true, false);
					PAGES[0] = 'editorbody0';
					//-->
					</script>
				</div>
			</div>";
	echo "</form>";
	
	// Create Print Form
	echo "<form name='printform' method='post' action='/lib/html_to_pdf/ant_pdf_create.awp'>
			<input type='hidden' name='printbody' value=''>
		  </form>";
	
	// Close container div
	echo "</div>";
?>
</body>
